name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
    paths:
      - 'apps/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod
        default: 'dev'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Login to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Set Docker Tag
        id: docker_tag
        run: |
          echo "tag=$(date +'%Y%m%d')-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./apps/python-app
          push: true
          tags: |
            ${{ secrets.ACR_LOGIN_SERVER }}/python-app:${{ steps.docker_tag.outputs.tag }}
            ${{ secrets.ACR_LOGIN_SERVER }}/python-app:latest
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
      - name: Azure AKS Set Context
        uses: azure/aks-set-context@v3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'
      
      - name: Deploy to AKS using Helm
        run: |
          cd apps/helm
          chmod +x ./install.sh
          ./install.sh ${{ github.event.inputs.environment }}

      - name: Install Prometheus using Helm
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          helm upgrade --install prometheus prometheus-community/kube-prometheus-stack \
            --version 51.0.0 \
            --namespace monitoring \
            --create-namespace \
            --wait \
            --timeout 10m

      - name: Install Grafana using Helm
        run: |
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update
          helm upgrade --install grafana grafana/grafana --namespace monitoring --create-namespace
