name: Deploy IaC with Terraform

on:
  push:
    branches: 
      - main     
    paths:
      - 'IaC/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'IaC/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod
        default: 'dev'
permissions:
  id-token: write
  contents: read
  security-events: write
  
jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Checkov
        run: |
          python -m pip install --upgrade pip
          pip install checkov

      - name: Run Checkov scan
        id: checkov
        run: |
          checkov --directory IaC \
            --framework terraform \
            --output cli \
            --output sarif \
            --output-file-path console,results.sarif \
            --compact \
            --quiet \
            --soft-fail

      - name: Upload SARIF file
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
          category: Checkov

      - name: Check for Critical Issues
        if: steps.checkov.outcome == 'failure'
        run: |
          echo "Critical security issues found in the scan!"
          echo "Please review the scan results and fix any critical issues."
          exit 1

  plan:
    needs: security-scan
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: prod
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Cache Terraform
        uses: actions/cache@v3
        with:
          path: |
            ~/.terraform.d/plugin-cache
            .terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('IaC/**/*.tf') }}

      - name: Login to Azure
        uses: Azure/login@v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          creds: ${{ secrets.AZURE_CLIENT_SECRET }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        working-directory: ./IaC
        run: terraform init

      - name: Select or Create Terraform Workspace
        working-directory: ./IaC
        run: |
          terraform workspace select $TF_WORKSPACE || terraform workspace new $TF_WORKSPACE

      - name: Terraform Plan
        working-directory: ./IaC
        run: terraform plan -no-color -out=tfplan

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: IaC/tfplan
          retention-days: 5

  apply:
    name: Terraform Apply
    needs: plan
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    environment: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || github.ref_name == 'main' && 'prod' || github.ref_name == 'staging' && 'staging' || 'dev' }}
    
    env:
      TF_WORKSPACE: prod
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Cache Terraform
        uses: actions/cache@v3
        with:
          path: |
            ~/.terraform.d/plugin-cache
            .terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('IaC/**/*.tf') }}

      - name: Login to Azure
        uses: Azure/login@v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          creds: ${{ secrets.AZURE_CLIENT_SECRET }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: IaC

      - name: Terraform Init
        working-directory: ./IaC
        run: terraform init

      - name: Select Terraform Workspace
        working-directory: ./IaC
        run: terraform workspace select $TF_WORKSPACE

      - name: Terraform Apply
        working-directory: ./IaC
        run: terraform apply tfplan
